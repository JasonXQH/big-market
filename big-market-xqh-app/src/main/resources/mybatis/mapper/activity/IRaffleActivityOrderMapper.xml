<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.jasonxqh.infrastructure.dao.IRaffleActivityOrderDao">
  <resultMap id="BaseResultMap" type="io.github.jasonxqh.infrastructure.dao.po.activity.RaffleActivityOrder">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="sku" jdbcType="BIGINT" property="sku" />
    <result column="activity_id" jdbcType="BIGINT" property="activityId" />
    <result column="activity_name" jdbcType="VARCHAR" property="activityName" />
    <result column="strategy_id" jdbcType="BIGINT" property="strategyId" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="order_time" jdbcType="TIMESTAMP" property="orderTime" />
    <result column="total_count" jdbcType="INTEGER" property="totalCount" />
    <result column="day_count" jdbcType="INTEGER" property="dayCount" />
    <result column="month_count" jdbcType="INTEGER" property="monthCount" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="out_business_no" jdbcType="VARCHAR" property="outBusinessNo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>


  <insert id="insert" parameterType="io.github.jasonxqh.infrastructure.dao.po.activity.RaffleActivityOrder">
    insert into raffle_activity_order(
                                    user_id,
                                    sku,
                                    activity_id,
                                    activity_name,
                                    strategy_id,
                                    order_id,
                                    order_time,
                                    total_count,
                                    day_count,
                                    month_count,
                                    pay_amount,
                                    state,
                                    out_business_no,
                                    create_time,
                                    update_time)

    values(#{userId},
          #{sku},
          #{activityId},
          #{activityName},
          #{strategyId},
          #{orderId},
          #{orderTime},
          #{totalCount},
          #{dayCount},
          #{monthCount},
          #{payAmount},
          #{state},
          #{outBusinessNo},
          now(),
          now())
  </insert>

  <select id="queryRaffleActivityOrderByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
          user_id,
          sku,
          activity_id,
          activity_name,
          strategy_id,
          order_id,
          order_time,
          total_count,
          day_count,
          month_count,
          out_business_no,
          pay_amount,
          state
    from raffle_activity_order
    where user_id = #{userId}
  </select>

  <select id="queryRaffleActivityOrderByUserIdAndOutBN"  parameterType="io.github.jasonxqh.infrastructure.dao.po.activity.RaffleActivityOrder" resultMap="BaseResultMap">
      select
      user_id,
      sku,
      activity_id,
      activity_name,
      strategy_id,
      order_id,
      order_time,
      total_count,
      day_count,
      month_count,
      out_business_no,
      pay_amount,
      state
      from raffle_activity_order
      where user_id = #{userId} and out_business_no = #{outBusinessNo,jdbcType=VARCHAR}
    </select>

  <update id="updateOrderCompleted" parameterType="io.github.jasonxqh.infrastructure.dao.po.activity.RaffleActivityOrder" >
      update raffle_activity_order
      set   state       = 'complete',
            update_time = now()
      where user_id = #{userId}
            and out_business_no = #{outBusinessNo}
            and state = 'wait_pay'
<!--            and pay_amount != null-->

  </update>

  <select id="queryUnpaidActivityOrder"  parameterType="io.github.jasonxqh.infrastructure.dao.po.activity.RaffleActivityOrder"  resultMap="BaseResultMap">
      select
          user_id,
          order_id,
          out_business_no,
          pay_amount
    from raffle_activity_order
      where user_id = #{userId} and sku = #{sku} and state = 'wait_pay' and order_time >= NOW()-INTERVAL 1 MONTH
  </select>
</mapper>